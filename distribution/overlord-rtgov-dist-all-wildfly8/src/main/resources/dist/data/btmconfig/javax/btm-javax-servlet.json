{
  "instrumentation": {
    "javax.servlet": {
      "description": "Javax Servlet instrumentation",
      "rules": [{
        "ruleName": "Javax Servlet Consumer Start",
        "interfaceName": "^javax.servlet.Servlet",
        "methodName": "service",
        "parameterTypes": [
          "javax.servlet.ServletRequest",
          "javax.servlet.ServletResponse"
        ],
        "location": "ENTRY",
        "binds": [{
          "name": "req",
          "type": "javax.servlet.http.HttpServletRequest",
          "expression": "$1"
        },{
          "name": "uri",
          "type": "java.net.URI",
          "expression": "java.net.URI.create(req.getRequestURI())"
        }],
        "condition": "activate(uri.getPath(),req.getHeader(\"Hawkular-btid\"))",
        "actions": [{
          "type": "SetName",
          "nameExpression": "req.getHeader(\"Hawkular-btname\")"
        },{
          "type": "InstrumentConsumer",
          "direction": "In",
          "endpointTypeExpression": "\"HTTP\"",
          "uriExpression": "uri.getPath()",
          "idExpression": "req.getHeader(\"Hawkular-btid\")"
        },{
          "type": "ProcessHeaders",
          "direction": "In",
          "originalType": "javax.servlet.http.HttpServletRequest",
          "headersExpression": "req"
        },{
          "type": "SetDetail",
          "name": "btm_source",
          "valueExpression": "\"javax.servlet\""
        },{
          "type": "SetDetail",
          "name": "http_query",
          "valueExpression": "req.getQueryString()"
        },{
          "type": "SetDetail",
          "name": "http_host",
          "valueExpression": "req.getServerName()"
        },{
          "type": "SetDetail",
          "name": "http_port",
          "valueExpression": "req.getServerPort()"
        },{
          "type": "SetDetail",
          "name": "principal",
          "valueExpression": "req.getRemoteUser()"
        },{
          "type": "SetDetail",
          "name": "remoteAddr",
          "valueExpression": "req.getRemoteAddr()"
        },{
          "type": "SetDetail",
          "name": "remoteHost",
          "valueExpression": "req.getRemoteHost()"
        }]
      },{
        "ruleName": "Javax Servlet Consumer End Sync",
        "interfaceName": "^javax.servlet.Servlet",
        "methodName": "service",
        "parameterTypes": [
          "javax.servlet.ServletRequest",
          "javax.servlet.ServletResponse"
        ],
        "location": "EXIT",
        "binds": [{
          "name": "req",
          "type": "javax.servlet.http.HttpServletRequest",
          "expression": "$1"
        }],
        "condition": "isActive() && !$1.isAsyncStarted()",
        "actions": [{
          "type": "InstrumentConsumer",
          "direction": "Out",
          "endpointTypeExpression": "\"HTTP\"",
          "uriExpression": "java.net.URI.create(req.getRequestURI()).getPath()"
        },{
          "type": "AssertComplete"
        }]
      },{
        "ruleName": "Javax Servlet Consumer InputStream Complete Async Link",
        "interfaceName": "^javax.servlet.ServletRequest",
        "methodName": "getInputStream",
        "parameterTypes": [
        ],
        "location": "ENTRY",
        "condition": "isCorrelated(\"javax.servlet-async-\"+$0.hashCode())",
        "actions": [{
          "type": "CompleteCorrelation",
          "idExpression": "\"javax.servlet-async-\"+$0.hashCode()"
        }]
      },{
        "ruleName": "Javax Servlet Consumer InputStream Init",
        "interfaceName": "^javax.servlet.ServletRequest",
        "methodName": "getInputStream",
        "parameterTypes": [
        ],
        "location": "EXIT",
        "condition": "isActive() && isInContentProcessed()",
        "actions": [{
          "type": "FreeFormAction",
          "action": "initInBuffer($!)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer GetReader Complete Link",
        "interfaceName": "^javax.servlet.ServletRequest",
        "methodName": "getReader",
        "parameterTypes": [
        ],
        "location": "ENTRY",
        "condition": "isCorrelated(\"javax.servlet-async-\"+$0.hashCode())",
        "actions": [{
          "type": "CompleteCorrelation",
          "idExpression": "\"javax.servlet-async-\"+$0.hashCode()"
        }]
      },{
        "ruleName": "Javax Servlet Consumer InputStream Init on Read 1",
        "notes": [
          "Required to work around issue where getting caches the input stream so may not get retrieved to initiate buffer"
        ],
        "className": "^javax.servlet.ServletInputStream",
        "methodName": "read",
        "parameterTypes": [
          "byte[]"
        ],
        "location": "EXIT",
        "condition": "!isInBufferActive($0) && isActive() && isInContentProcessed() && $! > 0",
        "actions": [{
          "type": "FreeFormAction",
          "action": "initInBuffer($0)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer InputStream Init on Read 2",
        "notes": [
          "Required to work around issue where getting caches the input stream so may not get retrieved to initiate buffer"
        ],
        "className": "^javax.servlet.ServletInputStream",
        "methodName": "read",
        "parameterTypes": [
          "byte[]",
          "int",
          "int"
        ],
        "location": "EXIT",
        "condition": "!isInBufferActive($0) && isActive() && isInContentProcessed() && $! > 0",
        "actions": [{
          "type": "FreeFormAction",
          "action": "initInBuffer($0)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer InputStream Append 1",
        "className": "^javax.servlet.ServletInputStream",
        "methodName": "read",
        "parameterTypes": [
          "byte[]"
        ],
        "location": "EXIT",
        "actions": [{
          "type": "FreeFormAction",
          "action": "appendInBuffer($0, $1, 0, $!, $0.available()==0)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer InputStream Append 2",
        "className": "^javax.servlet.ServletInputStream",
        "methodName": "read",
        "parameterTypes": [
          "byte[]",
          "int",
          "int"
        ],
        "location": "EXIT",
        "actions": [{
          "type": "FreeFormAction",
          "action": "appendInBuffer($0, $1, $2, $!, $0.available()==0)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer InputStream Record",
        "className": "^javax.servlet.ServletInputStream",
        "methodName": "close",
        "parameterTypes": [
        ],
        "location": "ENTRY",
        "actions": [{
          "type": "FreeFormAction",
          "action": "recordInBuffer($0)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer OutputStream Complete Async Link",
        "interfaceName": "^javax.servlet.ServletResponse",
        "methodName": "getOutputStream",
        "parameterTypes": [
        ],
        "location": "ENTRY",
        "condition": "isCorrelated(\"javax.servlet-async-\"+$0.hashCode())",
        "actions": [{
          "type": "CompleteCorrelation",
          "idExpression": "\"javax.servlet-async-\"+$0.hashCode()"
        }]
      },{
        "ruleName": "Javax Servlet Consumer OutputStream Init",
        "interfaceName": "^javax.servlet.ServletResponse",
        "methodName": "getOutputStream",
        "parameterTypes": [
        ],
        "condition": "isActive() && isOutContentProcessed()",
        "location": "EXIT",
        "actions": [{
          "type": "FreeFormAction",
          "action": "initOutBuffer($!)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer OutputStream Append 1",
        "className": "^javax.servlet.ServletOutputStream",
        "methodName": "write",
        "parameterTypes": [
          "byte[]"
        ],
        "location": "EXIT",
        "actions": [{
          "type": "FreeFormAction",
          "action": "appendOutBuffer($0, $1, $2, $!, false)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer OutputStream Append 2",
        "className": "^javax.servlet.ServletOutputStream",
        "methodName": "write",
        "parameterTypes": [
          "byte[]",
          "int",
          "int"
        ],
        "location": "ENTRY",
        "actions": [{
          "type": "FreeFormAction",
          "action": "appendOutBuffer($0, $1, $2, $3, false)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer OutputStream Record",
        "className": "^javax.servlet.ServletOutputStream",
        "methodName": "close",
        "parameterTypes": [
        ],
        "location": "ENTRY",
        "actions": [{
          "type": "FreeFormAction",
          "action": "recordOutBuffer($0)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer BufferedWriter Init",
        "interfaceName": "^javax.servlet.ServletResponse",
        "methodName": "getWriter",
        "parameterTypes": [
        ],
        "condition": "isActive() && isOutContentProcessed()",
        "location": "EXIT",
        "actions": [{
          "type": "FreeFormAction",
          "action": "initOutBuffer($!)"
        }]
      },{
        "ruleName": "Javax Servlet Consumer Start Async",
        "interfaceName": "^javax.servlet.http.HttpServletRequest",
        "methodName": "startAsync",
        "parameterTypes": [
        ],
        "location": "EXIT",
        "condition": "isActive()",
        "actions": [{
          "type": "InitiateCorrelation",
          "idExpression": "\"javax.servlet-async-\"+hashCode($!.getRequest())"
        },{
          "type": "Unlink"
        }]
      },{
        "ruleName": "Javax Servlet Consumer Complete Async Context",
        "interfaceName": "^javax.servlet.AsyncContext",
        "methodName": "complete",
        "parameterTypes": [
        ],
        "location": "ENTRY",
        "condition": "isActive()",
        "actions": [{
          "type": "InstrumentConsumer",
          "direction": "Out",
          "endpointTypeExpression": "\"HTTP\""
        },{
          "type": "AssertComplete"
        }]
      }]
    }
  }
}